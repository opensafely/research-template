name: Run tests and publish dummy data as release

on: [push]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test_model:
    runs-on: ubuntu-latest
    name: Test stata can run against the model, using dummy data
    steps:
    - name: Extract branch name
      shell: bash
      # This is a github workflow command
      # https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install opensafely-cohort-extractor
    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        # It seems we can't do this with the standard GITHUB_TOKEN, but
        # have to use a personal token with the correct permissions instead
        login-server: docker.opensafely.org
        username: docker
        password: ${{ secrets.OPENSAFELY_DOCKER_PASSWORD }}

    - name: Update codelists
      run: cohortextractor update_codelists
    - name: Check codelists are up to date
      run: '[[ -z $(git status --porcelain codelists) ]] || (echo "Uncommitted changes to codelists detected, aborting" && exit 1)'

    - name: Generate dummy data
      run: cohortextractor generate_cohort --expectations-population=100000

    - name: Run model
      run: docker run --mount source=${{ github.workspace }},dst=/workspace,type=bind docker.opensafely.org/stata-mp analysis/model.do

    - name: Create pre-release if on non-master branch
      if: github.ref != 'master'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: "Development build of ${{ steps.extract_branch.outputs.branch }}"
        automatic_release_tag: draft-assets-for-${{ steps.extract_branch.outputs.branch }}
        draft: false
        prerelease: true
        files: |
          ./output/input*csv
    - name: Create full release if on master branch
      if: github.ref == 'master' || github.pull_request.merged == true
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: "Latest production build"
        automatic_release_tag: "latest"
        draft: false
        prerelease: false
        files: |
          ./output/input*csv
